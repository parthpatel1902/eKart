<nav class="navbar navbar-expand-sm navbar-dark bg-dark" style="position: fixed;top: 0;width: 100%;z-index: 1000;">
  <div class="container-fluid">
    <a class="navbar-brand" href="#"
      ><img
        width="40"
        height="40"
        src="cart.png"
        alt="globe-africa"
    /></a>
    <button
      class="navbar-toggler"
      type="button"
      data-bs-toggle="collapse"
      data-bs-target="#navbarSupportedContent"
      aria-controls="navbarSupportedContent"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link active text-light" aria-current="page" href="/"
            >Home</a
          >
        </li>
        <!-- <li class="nav-item">
          <a class="nav-link text-light" href="/about">About</a>
        </li> -->
        <li class="nav-item">
          <a class="nav-link text-light" id="viewProduct">Products</a>
        </li>

        <script>
            document.getElementById('viewProduct').addEventListener('click', function(event) {
              if (!localStorage.getItem('token')) {
                event.preventDefault();
                $('#loginModel').modal('show');
              } else {
                // Redirect to view product page if logged in
                window.location.href = '/viewproduct';
              }
            });
        </script>

      </ul>
      <div class="d-flex">
        <div id="shoppingCart">
          
        </div>
        </button>
        <script>

          if(localStorage.getItem('token')){
            document.getElementById('shoppingCart').innerHTML = `
            <button type="button" class="btn btn-light position-relative" onclick="location.href='/viewcart'">
            <i class="fa fa-shopping-cart" aria-hidden="true"></i>
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="numberCart">
              0
            </span>
            `;
          }


          numberOfCart();
          async function numberOfCart(){
              const token = localStorage.getItem('token');
                const data = await fetch('/numberOfcart',{
                  headers: {
                    'Authorization': `Bearer ${token}`
                  },
                })

                const resjson = await data.json();

                if(!resjson.success){
                  document.getElementById('shoppingCart').innerHTML = '';
                }else{
                  $("#numberCart").text(resjson.numberCart);
                }

            }
        </script>
        &nbsp;&nbsp;&nbsp;&nbsp;
        <div id="root">
        </div>
      </div>
    </div>
  </div>
</nav>

<div class="modal fade" id="loginModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Login</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="login-form">
          <div class="mb-3">
              <label for="email" class="form-label">Email address</label>
              <input type="email" class="form-control" id="email" placeholder="Enter email">
              <div id="emailError" class="text-danger"></div>
          </div>
          <div class="mb-3">
            <label for="password">Password</label>
            <div class="input-group">
              <input type="password" class="form-control" id="password" placeholder="Enter password" aria-describedby="passwordToggle">
              <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button" id="passwordToggle"><i class="fa fa-eye" aria-hidden="true"></i></button>
              </div>
            </div>
          </div>
          <div class="mb-3 d-flex">
              <a class="text-primary" href="/forgetPassword">Forgot password</a>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button class="btn btn-primary" id="login" onclick="login()">Login</button>
      </div>
    </div>
  </div>
</div>

<script>

    var currentTime = new Date();
    var currentHour = currentTime.getHours();
    var currentMinute = currentTime.getMinutes();
    var currentSecond = currentTime.getSeconds();

    const passwordField = document.getElementById('password');
    const passwordToggle = document.getElementById('passwordToggle');

    passwordToggle.addEventListener('click', function() {
      const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
      passwordField.setAttribute('type', type);
      this.innerHTML = type === 'password' ? '<i class="fa fa-eye" aria-hidden="true"></i>' : '<i class="fa fa-eye-slash" aria-hidden="true"></i>';
    });

    let dropdownVisible = false;

    function toggleDropdown() {
        const dropdownMenu = document.getElementById('dropdownMenu');
        dropdownVisible = !dropdownVisible;
        dropdownMenu.style.display = dropdownVisible ? 'block' : 'none';
    }
    showProfile();
    async function showProfile(){
      const token = localStorage.getItem('token');
      if(localStorage.getItem('token')){
        try {
          const resData = await fetch("/getuser",{
            method:'GET',
            headers:{
              'Content-Type':'application/json',
              'Authorization':`Bearer ${token}`
            }
          });

          const resjson = await resData.json();
          const userdata = resjson.data;

          if(userdata === undefined){
            document.getElementById('root').innerHTML = `<button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#loginModel">login</button>`;
          }else{
            const sendData = {
              name:userdata[0].name,
              email:userdata[0].email,
              adminId:userdata[0].adminId,
              id:userdata[0]._id
            }

            const template = `
            <div class="dropdown">
              <img src='${resjson.data[0].userProfile}' height='40px' width='50px' style='border-radius: 50%;cursor: pointer;' onclick="toggleDropdown()"/>
              <div id="dropdownMenu" class="dropdown-menu" style="display: none; position: absolute; top: 100%; right: 0;">
                <a class="dropdown-item" href="/userProfile">View Profile</a>
                <a class="dropdown-item" href="/vieworder">Orders</a>
                <a class="dropdown-item" href="#" onclick='logout(${JSON.stringify(sendData)})'>Logout</a>
              </div>
            </div>
            `
            document.getElementById('root').innerHTML = template;
          }
          

        } catch (error) {
          console.log("Error to find profile picture : ",error)
        }
        
      }else{
        document.getElementById('root').innerHTML = `<button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#loginModel">login</button>`
      }
    }

    function logout(data) {
      return Swal.fire({
        title: "Are you sure to logout?",
        icon: "warning",
        confirmButtonText: "Yes, logout",
        confirmButtonColor: "red",
        showCancelButton: true,
      }).then(async (result) => {
        if (result.isConfirmed) {
          localStorage.removeItem('token');
          const logintime = localStorage.getItem('logintime');
          const currentHour = new Date().getHours();
          const currentMinute = new Date().getMinutes();
          const currentSecond = new Date().getSeconds();
          const logouttime = `${currentHour}:${currentMinute}:${currentSecond}`;

          const apiData = new FormData();

          apiData.append("name", data.name);
          apiData.append("email", data.email);
          apiData.append("logintime", logintime);
          apiData.append("logouttime", logouttime);
          apiData.append("adminId", data.adminId);

          const resAddActivity = await fetch('/addactivity', {
            method: 'POST',
            body: apiData
          });

          const rejson = await resAddActivity.json();

          if (rejson.success) {
            localStorage.removeItem('logintime');
            localStorage.removeItem('token');

            Swal.fire({
              title: "Logout!",
              text: "Your are successfully logged out.",
              icon: "success"
            }).then(() => {
              location.href = "/";
            });
          }
        }
      });
}



    function login(){
        var email = document.getElementById('email').value;
        var password = document.getElementById('password').value;

        if(email == ""  || password == ""){
            return Swal.fire({
                title: "Oops...",
                text: "All fileds are required.",
                icon: "error"
            });
        }
        const apiData = new FormData();
        apiData.append('email', email);
        apiData.append('password', password);

        fetch('/userlogin', {
            method: 'POST',
            body: apiData,
        })
        .then(function (response) {
            if (response.ok) {
                return response.json();
            }
            throw new Error('Network response was not ok.');
        })
        .then(function (result) {
            if (result.available) {
              localStorage.setItem('logintime',`${currentHour}:${currentMinute}:${currentSecond}`);
              return Swal.fire({
                icon: 'success',
                text:"Login Successfulll."
              }).then((data)=>{
                if(data.isConfirmed){
                  localStorage.setItem('token',result.token)
                  location.reload();
                }
              })
            }else{
                Swal.fire({
                    title: "Oops...",
                    text: "Login failed. Invalid email and password ",
                    icon: "error"
                });
            }
        })
        .catch(function (error) {
            console.error("Login failed:", error);
            Swal.fire({
                title: "Oops...",
                text: "Login failed. Please try again later.",
                icon: "error"
            });
        });
    }
</script>
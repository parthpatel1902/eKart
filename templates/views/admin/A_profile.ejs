<html>
  <%- include('../../partials/admin_navbar.ejs') %>

  <div class="modal fade" id="changePassword" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalLabel">Update admin password</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <div class="mb-3">
                <label for="password" class="form-label">Current Password</label>
                <input type="password" class="form-control" id="oldpassword" placeholder="Enter current password">
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">New Password</label>
                <input type="password" class="form-control" id="password" placeholder="Enter new password" onchange="validatePassword()" onkeypress="validatePassword()">
                <div id="passwordError" class="text-danger"></div>
            </div>
            <div class="mb-3">
                <label for="confirm-password" class="form-label">Confirm Password</label>
                <input type="password" class="form-control" id="confirm-password" placeholder="Enter confirm password" onkeyup="validatePasswordMatch()" onchange="validatePasswordMatch()">
                <div id="passwordMatchError" class="text-danger"></div>
            </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="closeModel()">Close</button>
          <button type="button" class="btn btn-primary" onclick="updatePassword(event)">Change password</button>
        </div>
      </div>
    </div>
</div>

  <main id="main" class="main">

    <div class="pagetitle">
           <div class="d-flex justify-content-end"><button class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#changePassword">Change Password</button></div>
    </div><!-- End Page Title -->

    <section class="section dashboard">
      <div class="row">
            <div class="col-lg-12">
                <center>
                    <div id="root">

                    </div>
                </center>
            </div>
      </div>
    </section>

  </main><!-- End #main -->
  <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

  <!-- Vendor JS Files -->
  <script src="assets/vendor/apexcharts/apexcharts.min.js"></script>
  <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="assets/vendor/chart.js/chart.umd.js"></script>
  <script src="assets/vendor/echarts/echarts.min.js"></script>
  <script src="assets/vendor/quill/quill.min.js"></script>
  <script src="assets/vendor/simple-datatables/simple-datatables.js"></script>
  <script src="assets/vendor/tinymce/tinymce.min.js"></script>
  <script src="assets/vendor/php-email-form/validate.js"></script>

  <!-- Template Main JS File -->
  <script src="assets/js/main.js"></script>


  <script>

    async function updatePassword(event){
        event.preventDefault();
        
        const oldpass = document.getElementById('oldpassword').value;
        const newpass = document.getElementById('password').value;
    
        if(newpass == '' || oldpass == ''){
            return Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'All field is required!'
            })
        }

        const formData = new FormData();
        formData.append('oldpass', oldpass);
        formData.append('newpass', newpass);

        const token = localStorage.getItem('token');

        try {
            const response = await fetch("/changePassword",{
                method:'POST',
                headers:{
                    'Authorization':`Bearer ${token}`
                },
                body:formData
            })

            const data = await response.json();

            if(data.success){
                Swal.fire({
                    icon: 'success',
                    title: 'Great!',
                    text: 'Password is update successfully!'
                }).then((data)=>{
                    if(data.isConfirmed){
                        location.reload();
                    }
                })
            }

        } catch (error) {
            console.log(error);
        }
    }

    function validatePasswordMatch() {
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirm-password').value;
        const passwordMatchError = document.getElementById('passwordMatchError');

        if (password !== confirmPassword) {
            passwordMatchError.textContent = 'Passwords do not match';
        } else {
            passwordMatchError.textContent = '';
        }
    }

    function validatePassword() {
        const password = document.getElementById("password").value;
        const passwordError = document.getElementById("passwordError");

        if (password == "") {
            passwordError.textContent = "Password is required";
            document.getElementById('password').style.border = "2px solid red";
        } else if (!/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/.test(password)) {
            passwordError.textContent =
                "Password must be at least 8 characters long and contain a mix of letters and digits.";
            document.getElementById('password').style.border = "2px solid red";
        } else {
            passwordError.textContent = "";
            document.getElementById('password').style.border = "";
        }
    }
    
    $(document).ready(async()=>{

                const token = localStorage.getItem("token");

                try {
                    const response = await fetch('/getdetils', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    const data = await response.json();

                    const profile = `<h1 class='text-center text-light rounded' style="background-color: #0e2238;">Admin Profile</h1>
                        <div class='col-md-12 mt-3'>
                            <center>
                                <div class="card animate__animated animate__flipInY" style="width: 20rem;">
                                    <img src="${data.profile_photo}" class="card-img-top" alt="...">
                                    <div class="card-body">
                                    <h4 class='mt-3'>Name : - &nbsp;<span class='text-ptimary'>${data.name}</span></h4><hr>
                                    <h4>Email : - &nbsp;<span class='text-ptimary'>${data.email}</span></h4>
                                    </div>
                                </div>
                            </center>
                        <div>
                    `;
                    $("#root").html(profile);
            } catch (error) {
                console.error('There was a problem with the fetch adminDetails:', error);
            }
        });
  
    function closeModel(){
        location.reload();
    }
  </script>



</body>
</html>

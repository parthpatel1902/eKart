<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
        <%- include('../../partials/link.ejs') %>
    </head>
    <style>
        .login-form {
            max-width: 400px;
            margin: auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 10px;
            background-color: #fff;
            box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);
        }
        .login-form h2 {
            text-align: center;
            margin-bottom: 20px;
        }
        .login-form .form-control {
            border-radius: 20px;
        }
        .login-form .btn-primary {
            width: 100%;
            border-radius: 20px;
        }
        .login-form .mb-3 a {
            display: block;
        }
    </style>
<body>
    <div class="container" style="margin-top: 140px;">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="login-form">
                    <h2>Forget Password</h2>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email address</label>
                        <input type="email" class="form-control" id="email" placeholder="Enter email">
                        <div id="emailError" class="text-danger"></div>
                    </div>
                    <button class="btn btn-primary" onclick="forgetPassword(event)" id="sendOtp">Send OTP</button>
                    <div id="addnewPasswordFiled">

                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
<script>
    async function forgetPassword(event) {
        event.preventDefault();
        try {
            const emailInput = document.getElementById("email").value;
            
            if (emailInput === "") {
                return Swal.fire({
                    title: "Oops...!",
                    text: "Please provide email",
                    icon: "error"
                });
            }

            const responseemail = await fetch(`/otpemail?email=${encodeURIComponent(emailInput)}`,{method:"GET"});
            
            const dataemail = await responseemail.json();
            
            if (!dataemail.available) {
                return Swal.fire({
                    title: "Oops...!",
                    text: "This Email is not registered",
                    icon: "error"
                });
            }else{

            }

            document.getElementById('sendOtp').disabled = true;

            document.getElementById("email").disabled =true;

            Swal.fire({
                title: "Success!",
                text: "OTP is sent successful!",
                icon: "success"
            }).then(function (result) {
                if (result.isConfirmed) {
                    document.getElementById('addnewPasswordFiled').innerHTML = `
                    <div class="mb-3">
                        <label for="otp" class="form-label">Enter OTP</label>
                        <input type="text" onkeydown="restrictInput(event)" class="form-control" id="otp" placeholder="Enter OTP">
                    </div>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">Enter password : </label>
                        <input type="password" class="form-control" id="newpassword" placeholder="Enter fresh password" onchange="validatePassword()" onkeypress="validatePassword()">
                        <div id="passwordError" class='text-danger'></div>
                    </div>
                    <button class='btn btn-primary' onclick="submitNewPass(${Number(dataemail.otp)},'${emailInput}')">Submit</button>`;
                }
            });
        } catch (error) {
            console.log("Some error from the forgetPassword function :" , error);
        }
}

function restrictInput(event) {
      const keyPressed = event.key;

        // Check if the key pressed is a digit (0-9) or the backspace key
      if (
        !/^\d$/.test(keyPressed) &&
        keyPressed !== "Backspace" &&
        keyPressed !== "ArrowLeft" &&
        keyPressed !== "ArrowRight"
      ) {
        event.preventDefault(); // Prevent non-numeric characters from being entered
      }
}

function validatePassword() {
        const password = document.getElementById("newpassword").value;
        const passwordError = document.getElementById("passwordError");

        if (password == "") {
            passwordError.textContent = "Password is required";
            document.getElementById('newpassword').style.border = "2px solid red";
        } else if (!/^(?=.*\d)(?=.*[a-zA-Z]).{8,}$/.test(password)) {
            passwordError.textContent =
                "Password must be at least 8 characters long and contain a mix of letters and digits.";
            document.getElementById('newpassword').style.border = "2px solid red";
        } else {
            passwordError.textContent = "";
            document.getElementById('newpassword').style.border = "";
        }
    }
async function submitNewPass(otp, email) {
    let inputOTP = document.getElementById('otp').value;

    if (!otp || otp != inputOTP) {
        return Swal.fire({
            icon: 'error',
            title: 'Wrong OTP!',
        });
    } else {
        const newPassword = document.getElementById('newpassword').value;

        if (newPassword === "") {
            return Swal.fire({
                icon: 'error',
                title: 'Please Enter New Password!',
            });
        }

        const formData = new FormData();
        formData.append('email', email);
        formData.append('password', newPassword);

        try {
            fetch('/forgetpassword', {
            method: 'POST',
            body: formData,
            })
            .then(function (response) {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Network response was not ok.');
            })
            .then(function (data) {
                if(data.success){
                    Swal.fire({
                        title: "Success!",
                        text: "Password is reset successful!",
                        icon: "success"
                    }).then(function (result) {
                        if (result.isConfirmed) {
                            location.replace("/");
                        }
                    });
                }else{

                }
            })
        } catch (error) {
            console.error('Error updating password:', error);
            return Swal.fire({
                icon: 'error',
                title: 'An error occurred. Please try again later.',
            });
        }
    }
}
</script>
</html>